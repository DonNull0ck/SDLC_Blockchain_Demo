{"ast":null,"code":"import _defineProperty from \"/Users/Bhim/Documents/workspace/sdlc/blockchain/SDLC_BLOCKCHAIN_GIT/SDLC_Blockchain_Demo/project_code_base/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Bhim/Documents/workspace/sdlc/blockchain/SDLC_BLOCKCHAIN_GIT/SDLC_Blockchain_Demo/project_code_base/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Bhim/Documents/workspace/sdlc/blockchain/SDLC_BLOCKCHAIN_GIT/SDLC_Blockchain_Demo/project_code_base/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Bhim/Documents/workspace/sdlc/blockchain/SDLC_BLOCKCHAIN_GIT/SDLC_Blockchain_Demo/project_code_base/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Bhim/Documents/workspace/sdlc/blockchain/SDLC_BLOCKCHAIN_GIT/SDLC_Blockchain_Demo/project_code_base/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Bhim/Documents/workspace/sdlc/blockchain/SDLC_BLOCKCHAIN_GIT/SDLC_Blockchain_Demo/project_code_base/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Bhim/Documents/workspace/sdlc/blockchain/SDLC_BLOCKCHAIN_GIT/SDLC_Blockchain_Demo/project_code_base/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Bhim/Documents/workspace/sdlc/blockchain/SDLC_BLOCKCHAIN_GIT/SDLC_Blockchain_Demo/project_code_base/ui/src/patient_form/Signup.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-dom';\nimport './Signup.css';\nvar errorMessage = {\n  color: 'red',\n  textAlign: 'center',\n  display: 'none'\n};\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup(props) {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Signup).call(this, props));\n\n    _this.getTxStatus = function () {\n      // get the transaction states from the drizzle state\n      var _this$props$drizzleSt = _this.props.drizzleState,\n          transactions = _this$props$drizzleSt.transactions,\n          transactionStack = _this$props$drizzleSt.transactionStack; // get the transaction hash using our saved `stackId`\n\n      var txHash = transactionStack[_this.state.blockStackId]; // if transaction hash does not exist, don't display anything\n\n      if (!txHash) return null; // otherwise, return the transaction status\n\n      return true; //`Transaction status: ${transactions[txHash].status}`;\n    };\n\n    _this.state = {\n      PatientName: 'Bhim Dahal',\n      Patient_ID: '',\n      PatientForm_ID: '',\n      SSN: '',\n      DateOfBirth: '',\n      EmailAddress: '',\n      blockStackId: null\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      console.log('A form is submitted: ' + event);\n      event.preventDefault();\n      var _this$props = this.props,\n          drizzle = _this$props.drizzle,\n          drizzleState = _this$props.drizzleState;\n      var contract = drizzle.contracts.RegisterPatient; // let drizzle know we want to call the `setPatient` method with `value`\n\n      try {\n        var blockStackId = contract.methods[\"setPatient\"].cacheSend(this.state.PatientName, this.state.Patient_ID, this.state.PatientForm_ID, this.state.SSN, this.state.DateOfBirth, this.state.EmailAddress, {\n          from: drizzleState.accounts[0]\n        }); // save the `stackId` for later reference\n\n        this.setState({\n          blockStackId: blockStackId\n        });\n      } catch (error) {\n        document.getElementById(\"errorMessage\").style.display = 'block';\n        console.error(error);\n        return;\n      } // if successfully posted the data\n\n\n      if (this.getTxStatus()) {\n        this.props.history.push('/appointments');\n      } else {\n        //this.setState({errorPosting:true});\n        document.getElementById(\"errorMessage\").style.display = 'block';\n      }\n    } // get transaction status\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container singup-form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Signup Here\"), React.createElement(\"p\", {\n        id: \"errorMessage\",\n        style: errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Error occured while posting!\"), React.createElement(\"form\", {\n        method: \"POST\",\n        name: \"SignupForm\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.PatientName,\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        id: \"PatientName\",\n        placeholder: \"Enter Name\",\n        name: \"PatientName\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.Patient_ID,\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        id: \"Patient_ID\",\n        placeholder: \"Enter ID\",\n        name: \"Patient_ID\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.PatientForm_ID,\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        id: \"PatientForm_ID\",\n        placeholder: \"Enter Form ID\",\n        name: \"PatientForm_ID\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.SSN,\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        id: \"SSN\",\n        placeholder: \"Enter ssn\",\n        name: \"SSN\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        value: this.state.DateOfBirth,\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        id: \"DateOfBirth\",\n        placeholder: \"Enter Date of Birth\",\n        name: \"DateOfBirth\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        value: this.state.EmailAddress,\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        id: \"EmailAddress\",\n        placeholder: \"Enter email\",\n        name: \"EmailAddress\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-lg btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nexport default Signup;","map":{"version":3,"sources":["/Users/Bhim/Documents/workspace/sdlc/blockchain/SDLC_BLOCKCHAIN_GIT/SDLC_Blockchain_Demo/project_code_base/ui/src/patient_form/Signup.js"],"names":["React","Component","Redirect","errorMessage","color","textAlign","display","Signup","props","getTxStatus","drizzleState","transactions","transactionStack","txHash","state","blockStackId","PatientName","Patient_ID","PatientForm_ID","SSN","DateOfBirth","EmailAddress","handleInputChange","bind","handleSubmit","event","target","value","type","checked","name","setState","console","log","preventDefault","drizzle","contract","contracts","RegisterPatient","methods","cacheSend","from","accounts","error","document","getElementById","style","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect} from 'react-dom';\n\n\nimport './Signup.css';\n\nconst errorMessage = {\n      color: 'red',\n      textAlign: 'center',\n      display:'none'\n};\n\nclass Signup extends Component {\n  constructor (props) {\n  super(props);\n  this.state = {\n      PatientName: 'Bhim Dahal',\n      Patient_ID: '',\n      PatientForm_ID: '',\n      SSN: '',\n      DateOfBirth: '',\n      EmailAddress: '',\n      blockStackId: null\n    };\n  this.handleInputChange = this.handleInputChange.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n}\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n   handleSubmit(event) {\n    console.log('A form is submitted: ' + event);\n    event.preventDefault();\n    const { drizzle, drizzleState } = this.props;\n    const contract = drizzle.contracts.RegisterPatient;\n\n    // let drizzle know we want to call the `setPatient` method with `value`\n    try {\n        const blockStackId = contract.methods[\"setPatient\"].cacheSend(\n          this.state.PatientName,\n          this.state.Patient_ID,\n          this.state.PatientForm_ID,\n          this.state.SSN,\n          this.state.DateOfBirth,\n          this.state.EmailAddress,\n         {\n          from: drizzleState.accounts[0]});\n        // save the `stackId` for later reference\n      this.setState({ blockStackId });\n    }catch(error){\n      document.getElementById(\"errorMessage\").style.display = 'block';\n      console.error(error);\n      return;\n    }\n    \n    // if successfully posted the data\n    if(this.getTxStatus()){\n      this.props.history.push('/appointments');\n    }else {\n      //this.setState({errorPosting:true});\n      document.getElementById(\"errorMessage\").style.display = 'block';\n    }\n    \n  }\n\n  // get transaction status\n  getTxStatus = () => {\n    // get the transaction states from the drizzle state\n    const { transactions, transactionStack } = this.props.drizzleState;\n\n    // get the transaction hash using our saved `stackId`\n    const txHash = transactionStack[this.state.blockStackId];\n\n    // if transaction hash does not exist, don't display anything\n    if (!txHash) return null;\n\n    // otherwise, return the transaction status\n    return true;\n    //`Transaction status: ${transactions[txHash].status}`;\n  };\n\n\n\n  render() {\n    \n    return (\n      <div className=\"container singup-form-container\">\n        <h2>Signup Here</h2>\n          <p id=\"errorMessage\" style={errorMessage}>Error occured while posting!</p>\n      <form  method=\"POST\" name=\"SignupForm\" onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <input \n          type=\"text\" \n          value={this.state.PatientName} \n          onChange={this.handleInputChange} \n          className=\"form-control\" id=\"PatientName\" \n          placeholder=\"Enter Name\" name=\"PatientName\" required/>\n        </div>\n         <div className=\"form-group\">\n          <input type=\"text\" \n          value={this.state.Patient_ID} \n          onChange={this.handleInputChange} \n          className=\"form-control\" id=\"Patient_ID\" \n          placeholder=\"Enter ID\" name=\"Patient_ID\" required/>\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" \n          value={this.state.PatientForm_ID} \n          onChange={this.handleInputChange} \n          className=\"form-control\" id=\"PatientForm_ID\" \n          placeholder=\"Enter Form ID\" name=\"PatientForm_ID\" required/>\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" \n          value={this.state.SSN} \n          onChange={this.handleInputChange} \n          className=\"form-control\" id=\"SSN\" \n          placeholder=\"Enter ssn\" name=\"SSN\" required/>\n        </div>\n        <div className=\"form-group\">\n          <input type=\"date\" \n          value={this.state.DateOfBirth} \n          onChange={this.handleInputChange} \n          className=\"form-control\" id=\"DateOfBirth\" \n          placeholder=\"Enter Date of Birth\" name=\"DateOfBirth\" required/>\n        </div>\n        <div className=\"form-group\">\n          <input type=\"email\" \n          value={this.state.EmailAddress} \n          onChange={this.handleInputChange} \n          className=\"form-control\" id=\"EmailAddress\" \n          placeholder=\"Enter email\" name=\"EmailAddress\" required/>\n        </div>\n      <button type=\"submit\"  className=\"btn btn-lg btn-primary\">Submit</button>\n      </form>\n      </div>\n      \n    );\n  }\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}